.app-container {
  text-align: center;
  min-height: 100vh;
  padding: 30px;
}

.content-container {
  display: grid;
  gap: 40px;
  /*
    restrict text selection
  */
  -webkit-user-select: none; /* Safari */
  -ms-user-select: none; /* IE 10 and IE 11 */
  user-select: none; /* Standard syntax */
  /*
   ***** grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));

    -> These keywords tell the browser to handle the column sizing and element
    wrapping for us so that the elements will wrap into rows when the width 
    is not large enough to fit them in without any overflow.
     -> The fraction unit we used also ensures that in case the width allows 
   for a fraction of a column to fit but not a full column, that space will 
   instead be distributed over the column or columns that already fit,
   making sure we aren’t left with any empty space at the end of the row.

   -> The 1fr is what tells the browser to distribute the space between the 
   columns so that each column equally gets one fraction of that space.
   -> So we need to start by specifying a minimum width for the columns, 
   making sure they don’t get too narrow. We can do that using the minmax() function.

   more here: https://css-tricks.com/auto-sizing-columns-css-grid-auto-fill-vs-auto-fit/
  */
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  /*
    ***  grid-auto-rows: minmax(min-content, max-content);
    Use this trick to resize your items inside the grid 
     to the height of the highest item in this row
  */
  grid-auto-rows: minmax(min-content, max-content);
  flex-wrap: wrap;
  justify-items: center;
  padding: 50px 0;
}

/*
  Restrict image drag
*/
.content-container img {
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
}

h1 {
  font-family: "Poppins";
  font-style: normal;
  font-weight: 700;
  font-size: 48px;
  /* Styles for gradient text */
  background: linear-gradient(90deg, #00f0ff 0%, #5773ff 46.87%, #ff007a 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-fill-color: transparent;
}

.card {
  max-width: 420px;
  min-width: 300px;
  width: 100%;
  /* 
    Trick for adding gradients borders:
      1. Add desired gradient background for the parent node.
      2. Set a transparent border.
      3. Children node should have a height of 100% and non-transparent background.

      You can read more about this here https://codyhouse.co/nuggets/css-gradient-borders
    */
  border: 2px solid transparent;
  background: linear-gradient(90deg, #00f0ff 0%, #5773ff 46.87%, #ff007a 100%)
      padding-box,
    linear-gradient(90deg, #00f0ff 0%, #5773ff 46.87%, #ff007a 100%) border-box;
  border-radius: 30px;
}

.card-body {
  padding: 30px;
  height: 100%;
  border-radius: 30px;
  display: grid;
  /*
    grid-auto-rows: auto 1fr auto;
      -> This property will set the height for each row in card (card-header, card-text, link-area)
      where: 
      auto = height of the content
      1fr = all of the available space
  */
  grid-auto-rows: auto 1fr auto;
  /* 
    -> Trick for adding gradients borders:
     Set the desired background for your card in the child node as you've added
      a gradient background for the parent node with a gradient border trick.
    */
  background: linear-gradient(90deg, #0d3a5b 0, #462255 100%);
}

.card-text {
  color: #ffffff;
  font-style: normal;
  font-weight: 400;
  font-size: 16.0231px;
  line-height: 24px;
  text-align: left;
  margin-top: 30px;
}

.card-header {
  display: flex;
  align-items: center;
}

.name-box {
  text-align: left;
  padding-left: 15px;
}

.name-box p:first-child {
  font-style: normal;
  font-weight: 700;
  font-size: 21.3641px;
  line-height: 32px;
  /* Styles for gradient text */
  background: linear-gradient(90deg, #00f0ff 0%, #5773ff 46.87%, #ff007a 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-fill-color: transparent;
}

.name-box p:last-child {
  font-style: normal;
  font-weight: 400;
  font-size: 12.0173px;
  line-height: 18px;
  /* identical to box height */

  color: #ffffff;
}

.avatar {
  height: 50px;
  width: 50px;
  border-radius: 50%;
}

.link-area {
  padding-top: 30px;
  display: flex;
}

.link-area img {
  height: 40px;
}
